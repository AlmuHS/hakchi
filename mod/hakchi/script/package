transfer_file(){
  [ -f "$1" ] || return 0
  [ -f "$temppath/config.tmp" ] && source "$temppath/config.tmp"
  source "$1"
  res=$?
  rm -f "$1"
  set | grep -F cfg_ > "$temppath/config.tmp"
  return $res
}

transfer_default(){
  echo transferring data...
  rsync -ac --exclude "/uninstall" "$transferpath/" "$installpath/"
}

transfer_path(){
  transferpath=$1
  transferfile=$transferpath/transfer
  [ -f "$transferfile" ] && rm -f "transferpath/install"
  [ -f "$transferfile" ] || transferfile=$transferpath/install
  rm -f $transferpath/readme.*
  rm -f $transferpath/README.*
  rm -f $transferpath/*.txt
  rm -f $transferpath/*.md
  transfer_file "$transferfile" && transfer_default
}

pack_upath(){
  echo $installpath/hmod/uninstall-$(basename "$1" .hmod)
}

pack_install(){
  if [ -f "$1" ]; then
    transferpath=$temppath/pack
    rm -rf "$transferpath"
    mkdir -p "$transferpath"
    cd "$transferpath" && tar -xzf "$1"
  else
    transferpath=$1
  fi
  transfer_path "$transferpath"
  mkdir -p "$installpath/hmod"
  if [ ! -f "$transferpath/uninstall" ]; then
    cd "$transferpath"
    find . -type l -print0 | xargs -0 -I{} echo rm -f \"\$installpath/{}\" >> "$transferpath/uninstall"
    find . -type f -print0 | xargs -0 -I{} echo rm -f \"\$installpath/{}\" >> "$transferpath/uninstall"
    find . -depth -type d -print0 | xargs -0 -I{} echo rmdir \"\$installpath/{}\" >> "$transferpath/uninstall"
  fi
  cd /
  unfile=$(pack_upath "$1")
  rsync -ac "$transferpath/uninstall" "$unfile"
}

pack_uninstall(){
  if [ "$1" == "all" ]; then
    for i in $(find "$installpath/hmod/" -maxdepth 1 -type f -name "uninstall-*" | sort); do
      unfile=$(pack_upath "$i")
      transfer_file "$unfile"
    done
  else
    unfile=$(pack_upath "$1")
    transfer_file "$unfile"
  fi
}

packs_install(){
  for i in $(find "$1" -maxdepth 1 -name "*.hmod" | sort); do
    pack_install "$i"
    rm -rf "$i"
  done
}
